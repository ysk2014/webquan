#源
source mrblog_article
{
    type                    = mysql
    sql_host                = localhost
    sql_user                = root
    sql_pass                = xxx
    sql_db                  = mrblog
    sql_port                = 3306
    sql_query_pre   = SET NAMES utf8
    sql_sock                = /tmp/mysql.sock

    sql_query               = \
            SELECT id, article_id, title, summary, content, added_date \
            FROM bk_search_index
    ##WARNING: attribute 'id' not found - IGNORING
    #出现这个的原因是因为不能使用主键,且上面的查询语句默认且必需第一个字段是id
    sql_attr_uint           = article_id 
    sql_attr_timestamp      = added_date
    sql_ranged_throttle     = 100
}
#索引
index mrblog_article_1
{
    source                  = mrblog_article
    path                    = /alidata/sphinx/data/mrblog_article_1
    docinfo                 = extern
    dict                    = keywords
    mlock                   = 0
    morphology              = none
    min_word_len            = 1
    ngram_len               = 1
    ngram_chars             = U+3000..U+2FA1F
    html_strip              = 100
}


source mrblog_articlethrottled : mrblog_article
{
    sql_ranged_throttle     = 100
}

index rt
{
    type                    = rt
    path                    = /alidata/sphinx/data/rt
    rt_field                = title
    rt_field                = content
    rt_attr_uint            = gid
}

indexer
{
    mem_limit               = 128M
}

searchd
{
    listen                  = 9312
    log                     = /alidata/sphinx/log/searchd.log
    query_log               = /alidata/sphinx/log/query.log
    read_timeout            = 5
    client_timeout          = 300
    max_children            = 30
    persistent_connections_limit    = 30
    pid_file                = /alidata/sphinx/data/searchd.pid
    preopen_indexes         = 1
    unlink_old              = 1
    mva_updates_pool        = 1M
    max_packet_size         = 8M
    max_filters             = 256
    max_filter_values       = 4096
    max_batch_queries       = 32
    workers                 = threads # for RT to work
}

common
{

}